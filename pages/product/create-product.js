import { useState, useEffect } from 'react';
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import InputBox from '@/components/InputBox'
import Div from '@/components/Div'
import Typhography from '@/components/Typhography'
import { BsCircleHalf } from 'react-icons/bs';
import Button from '@/components/Button'
import Link from 'next/link'
import axios from 'axios';
import { useSelector } from 'react-redux';
import { useRouter } from 'next/router';
import ErrorMsg from '@/components/ErrorMsg';
// maboqaq@mailinator.com
// Pa$$w0rd!

export default function CreateProduct() {
    const userAuthData = useSelector(state => state)
    const router = useRouter()

    const token = userAuthData.authData.userInfo.token
    const userId = userAuthData.authData.userInfo.id
    const shopId = userAuthData.authData.userInfo.shop_id

    const [mainImage, setMainImage] = useState([])
    const [deliveryCharge, setDeliveryCharge] = useState("")
    const [deliveryLocation, setDeliveryLocation] = useState("")

    const onImageChange = (e) => {
        setMainImage(e.target.files[0]);
    }
    const handledeliverylocationChange = (e) => {
        setDeliveryLocation(e);
    }
    console.log(deliveryLocation)
    const handledeliveryChargeChange = (e) => {
        setDeliveryCharge(e.target.value)
    }

    const [formData, setFormData] = useState({
        category_name: "",
        product_name: "",
        price: "",
        discount: "",
        product_code: "",
        product_qty: "",
        status: "",
        delivery_charge: deliveryCharge,
        inside_dhaka: "",
        outside_dhaka: "",
    });

    const [formErrData, setFormErrData] = useState({
        category_name: "",
        product_name: "",
        price: "",
        discount: "",
        product_code: "",
        product_qty: "",
        status: "",
        delivery_charge: "",
        inside_dhaka: "",
        outside_dhaka: "",
    });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
        setFormErrData({ ...formErrData, [name]: "" })
    }
    
    console.log(formData);



    const handleProductAdd = async (e) => {
        e.preventDefault()
        const formImageData = new FormData()
        formImageData.append('main_image', mainImage)
        formImageData.append('name', "imran")
        // for (var key of formImageData.entries()) {
        //     console.log(key[0] + ', ' + key[1]);
        // }
        console.log("formdata", formImageData.entries())

        let url = `https://dev.funnelliner.com/api/v1/client/products`
        let config = {
            headers: {
                "X-Requested-With": "XMLHttpRequest",
                "id": userId,
                "shop-id": shopId,
                "authorization": token,
                "Content-Type": "multipart/form-data"
            }
        }

        console.log("ami", formImageData.get("main_image"))
        let newProduct = await axios.post(url, {
            category_name: formData.category_name,
            product_name: formData.product_name,
            price: formData.price,
            discount: parseInt(formData.discount),
            main_image: formImageData.get("main_image"),
            product_code: formData.product_code,
            product_qty: formData.product_qty,
            status: "1",
            delivery_charge: deliveryCharge,
            inside_dhaka: "1",
            outside_dhaka: "0",
        }, config)

        console.log(newProduct)

    }

    return (
        <>
            <Head>
                <title>Create Product</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <Div className="flex flex-col">
                    <Div className={styles.card}>
                        <Typhography as="h1" className="text-3xl font-bold underline mb-2">Create Product</Typhography>
                        <Typhography as='small' className='heading text-[#f3f4ff] text-xl font-medium opacity-50'>Add your products here</Typhography>

                        <Link href="/product">Product List</Link>

                        <form onSubmit={handleProductAdd} encType="multipart/form-data">
                            <Div className="flex flex-wrap gap-5 mt-5">
                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='category_name' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='text' placeholder='Category' />
                                    </Div>

                                    {formErrData.category_name &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.category_name}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>


                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='product_name' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='text' placeholder='Product Name' />
                                    </Div>

                                    {formErrData.product_name &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.product_name}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>

                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='price' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='text' placeholder='Price' />
                                    </Div>

                                    {formErrData.price &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.price}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>

                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='discount' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='number' placeholder='Discount' />
                                    </Div>

                                    {formErrData.discount &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.discount}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>

                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={onImageChange} name='main_image' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-3 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='file' placeholder='Discount' multiple />
                                    </Div>

                                    {formErrData.main_image &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.main_image}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>


                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='product_code' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='text' placeholder='Product Code' />
                                    </Div>

                                    {formErrData.product_code &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.product_code}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>

                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='product_qty' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='text' placeholder='Product Qty' />
                                    </Div>

                                    {formErrData.product_qty &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.product_qty}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>

                                {/* <Div className="block mb-5">
                                <Div className='relative'>
                                    <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                        <BsCircleHalf className='text-lg text-slate-400' />
                                    </Div>

                                    <InputBox onChange={handleChange} name='status' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='text' placeholder='Product Status' />
                                </Div>

                                {formErrData.status &&
                                    <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                        <Typhography as='h3'>{formErrData.status}</Typhography>
                                    </ErrorMsg>
                                }
                            </Div> */}

                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <select onChange={handledeliveryChargeChange} name="delivery_charge" id="" className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1'>
                                            <option value="">Delivery Charge</option>
                                            <option value="1">Free</option>
                                            <option value="2">Free or Paid</option>
                                        </select>
                                    </Div>

                                    {formErrData.status &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.status}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>

                                {/* <Div className="block mb-5">
                                    <Div className='relative'>
                                        <div className="flex items-center mb-4 gap-5">
                                            <input onChange={() => handledeliverylocationChange(50)} id="default-radio-1" type="radio" value="50" name="default-radio" className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" />
                                            <label htmlFor="default-radio-1" className="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Inside Dhaka</label>

                                            <input onChange={() => handledeliverylocationChange(120)} id="default-radio-2" type="radio" value="120" name="default-radio" className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" />
                                            <label htmlFor="default-radio-2" className="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Outside Dhaka </label>
                                        </div>

                                    </Div>

                                    {formErrData.product_name &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.product_name}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div> */}

                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='inside_dhaka' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='number' placeholder='inside Dhaka Charge' />
                                    </Div>

                                    {formErrData.inside_dhaka &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.inside_dhaka}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>
                                <Div className="block mb-5">
                                    <Div className='relative'>
                                        <Div className="absolute inset-y-0 left-0 flex items-center pl-5">
                                            <BsCircleHalf className='text-lg text-slate-400' />
                                        </Div>

                                        <InputBox onChange={handleChange} name='outside_dhaka' className='placeholder:text-slate-400 placeholder:text-lg block bg-white w-[25vw] border border-slate-300 text-xl font-semibold text-[#11175D] rounded-md py-4 pl-12 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1' type='number' placeholder='Outside Dhaka Charge' />
                                    </Div>

                                    {formErrData.outside_dhaka &&
                                        <ErrorMsg className='bg-red-500 text-left text-white px-5 py-3 mt-3 font-medium text-lg rounded'>
                                            <Typhography as='h3'>{formErrData.outside_dhaka}</Typhography>
                                        </ErrorMsg>
                                    }
                                </Div>



                            </Div>
                            <Button type="submit" className='bg-[#086FA4] text-white rounded-md py-4 text-xl px-10 mt-5'>Add Product</Button>
                        </form>

                    </Div>




                </Div>

            </main>
        </>
    )
}
